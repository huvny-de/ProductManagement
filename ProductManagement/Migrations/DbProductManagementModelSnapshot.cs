// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductManagement.DbContexts;

namespace ProductManagement.Migrations
{
    [DbContext(typeof(DbProductManagement))]
    partial class DbProductManagementModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProductManagement.Entities.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Name = "Drink"
                        },
                        new
                        {
                            CategoryId = 2,
                            Name = "Snack"
                        },
                        new
                        {
                            CategoryId = 3,
                            Name = "Candy"
                        });
                });

            modelBuilder.Entity("ProductManagement.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(6)
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Amount = 10.0,
                            CategoryId = 1,
                            Name = "Coconut",
                            Price = 25000.0
                        },
                        new
                        {
                            ProductId = 2,
                            Amount = 20.0,
                            CategoryId = 2,
                            Name = "Tonnie",
                            Price = 6000.0
                        },
                        new
                        {
                            ProductId = 3,
                            Amount = 30.0,
                            CategoryId = 3,
                            Name = "Chuppa",
                            Price = 2000.0
                        });
                });

            modelBuilder.Entity("ProductManagement.Entities.Product", b =>
                {
                    b.HasOne("ProductManagement.Entities.Category", "Cateid")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cateid");
                });

            modelBuilder.Entity("ProductManagement.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
